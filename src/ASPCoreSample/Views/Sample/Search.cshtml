@{
    ViewBag.Title = "";
}

<h2>@ViewBag.Message</h2>
<div class="container-fluid">
    <div class="row">
        <div class="form-group">
            <div class="col-md-3" data-bind="foreach: selectFilterVM.selectFilters">
                <label style="margin-top:5px; margin-bottom:5px;" for="sel1" data-bind="text: nameLabel"></label>

                <select class="form-control" id="sel1" data-bind="attr: { multiple: multiSelect }, options: availableValues,
                value: value,
                selectedOptions: values"></select>
            </div>
            <div class="col-md-4">
                <ul data-bind="foreach: selectFilterVM.activeFilters">
                    <li>
                        <span style="margin-top:5px; margin-bottom:5px; font-weight:bold" data-bind="text: nameLabel"></span>

                        <span data-bind="text: valueText"></span>

                        <a href="#" data-bind="event:{ click: reset }">Clear</a>
                    </li>
                </ul>
            </div>
            <div class="col-md-offset-6">
                <table class="table table-striped table-hover table-condensed table-bordered">
                    <thead>
                        <tr>
                            <th>
                                Water Fall
                            </th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: selectFilterVM.selectedItems">
                        <tr>
                            @*<td data-bind="text: open_to_public"></td>*@
                            <td data-bind="text: name"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

    // Define the filtering select controls this way.
    // Parameters to selectFilter() are:
    //   name:         name of property to filter on
    //   parentName:   name of master select control's property
    //   model:        the model object for this view
    //   multiselect:  whether to allow selection of multiple values
    function loadSelects(model) {
        new selectFilter('open_to_public', '', model, 'Open To Public', false);
        //new selectFilter('name', 'open_to_public', model, 'Name', false);
    }

    var viewModel = function() {
        this.selectFilterVM = new sfViewModel(this);
    };


    var AllItems = [ ];
    $(document).ready(function () {
        var model = new viewModel();
        // specify the method to load the select filters.
        model.selectFilterVM.loadSelectsFunc = loadSelects;

        // To load the item list with an ajax call, uncomment this line and comment out the one below it.
        // Load homes collection from server, then populate allItems
        //$.getJSON("/api/allfalls", model.selectFilterVM.loadListFromArray());  // Change the URL as needed.

        $.ajax("/api/allfalls", {
            type: "GET",
            cache: false,
        }).done(function (jsondata) {
            model.selectFilterVM.loadListFromArray( { AllItems: jsondata });
        });

        // To load the items from a local javascript array, uncomment this line and comment out the previous one.
        //model.selectFilterVM.loadListFromArray({ AllItems: AllItems} );

    }); jQuery();

    </script>
}